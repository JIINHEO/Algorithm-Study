# 이것이 코딩테스트다 with 파이썬

# 문제 4-3 (2중 반복문 구조를 이용)
# 왕실의 나이트
# 8x8 좌표 평면상에서 나이트의 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의 수를 출력
# 나이트는 L자 형태로만 이동할 수 있다

# 1. 수평으로 두 칸 이동한 뒤에 수직으로 한 칸 이동하기
# 2. 수직으로 두 칸 이동한 뒤에 수평으로 한 칸 이동하기

# 행 1-8, 열 a-h

# <풀이>
# 나이트가 이동할 수 있는 경로를 하나씩 확인하여 이동하면 된다.
# 다만, 8x8 좌표 평면을 벗어나지 않도록 검사하는 과정이 필요하다.

# 현재 나이트 위치 입력
input_data = input()

column = int(ord(input_data[0])) - int(ord('a')) + 1 # 아스키 코드값을 빼줌
row = int(input_data[1]) # 행

# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1),(2, 1), (1, 2), (-1, -2), (-2, 1)]

# 8가지 방향에 대하여 각 위치로 이동이 가능한지 확인
result = 0
for step in steps:
    # 이동하고자 하는 위치 확인
    next_row = row + step[0]
    next_column = column + step[1]
    # 해당 위치로 이동이 가능하다면 카운트 증가(체스판을 벗어나지 않으면)
    if next_row >= 1 and next_row <= 8 and next_column >= 1 and next_column <= 8:
        result += 1

print(result)

# <입력>
# a1

# <출력>
# 2
